Comment: Carries out the steps needed to create a Monthly Contributor
StartAt: CreatePaymentMethod
TimeoutSeconds: 86400
States:
  CreatePaymentMethod:
    Type: Task
    Resource: "${CreatePaymentMethodLambda.Arn}"
    Next: CreateSalesforceContact
    {{> retry}}
    {{> catch}}

  CreateSalesforceContact:
    Type: Task
    Resource: "${CreateSalesforceContactLambda.Arn}"
    Next: CreateZuoraSubscription
    {{> retry}}
    {{> catch}}

  CreateZuoraSubscription:
    Type: Task
    Resource: "${CreateZuoraSubscriptionLambda.Arn}"
    Next: ParallelTasks
    {{> retry}}
    {{> catch}}

  ParallelTasks:
    Type: Parallel
    Branches:
    - StartAt: ContributionCompleted
      States:
        ContributionCompleted:
          Type: Task
          Resource: "${ContributionCompletedLambda.Arn}"
          End: True
    - StartAt: SendThankYouEmail
      States:
        SendThankYouEmail:
          Type: Task
          Resource: "${SendThankYouEmailLambda.Arn}"
          End: True
          {{> retry}}
    - StartAt: SendAcquisitionEvent
      States:
        SendAcquisitionEvent:
          Type: Task
          Resource: "${SendAcquisitionEventLambda.Arn}"
          End: True
          {{> retry}}
    Next: WaitForBrowserPoll

  FailureHandler:
    Type: Task
    Resource: "${FailureHandlerLambda.Arn}"
    Next: SucceedOrFailChoice
    {{> retry}}

  SucceedOrFailChoice:
    Type: Choice
    Choices:
      - Variable: "$.requestInfo.failed"
        BooleanEquals: true
        Next: FailState
    Default: WaitForBrowserPoll

  WaitForBrowserPoll:
    Type: Wait
    Seconds: 30
    Comment: |
      This state exists to avoid the situation where the state machine is terminated before the client's polling
      detects that the execution is complete.  This could happen during a deployment when a new state machine
      is created and the old is terminated.
    End: True

  FailState:
    Type: Fail

